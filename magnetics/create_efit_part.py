topNode.addNode("A1GAM","SIGNAL")
topNode.addNode("A2GAM","SIGNAL")
topNode.addNode("A3GAM","SIGNAL")
topNode.addNode("A4GAM","SIGNAL")
topNode.addNode("A5GAM","SIGNAL")
topNode.addNode("A6GAM","SIGNAL")
topNode.addNode("AAACOMMENT","TEXT")
topNode.putData(Data.compile('$1'),'These nodes contin the data included in the GAQ type G-eqdsk, as written by WEQDSK. This data is normally written out timeslice by timeslice, but here the relevant quantities are assembled into signals before being PUT to the tree. Note that some of this data is redundant with the contents of the Aeqdsk.')
topNode.addNode("BCENTR","SIGNAL")
topNode.addNode("BDRY","SIGNAL")
topNode.addNode("BRSP","SIGNAL")
topNode.addNode("CASE","SIGNAL")
topNode.addNode("CPASMA","SIGNAL")
topNode.addNode("DMION","SIGNAL")
topNode.addNode("ECASE","TEXT")
topNode.putData(Data.compile('$1'),'Build_Signal(["  EFITD      09/12  /2014     1160607001    60ms            ","  EFITD      09/12  /2014     1160607001    80ms            ","  EFITD      09/12  /2014     1160607001   100ms            ","  EFITD      09/12  /2014     1160607001   120ms            ","  EFITD      09/12  /2014     1160607001   140ms            ","  EFITD      09/12  /2014     1160607001   160ms            ","  EFITD      09/12  /2014     1160607001   180ms            ","  EFITD      09/12  /2014     1160607001   200ms            ","  EFITD      09/12  /2014     1160607001   220ms            ","  EFITD      09/12  /2014     1160607001   240ms            ","  EFITD      09/12  /2014     1160607001   260ms            ","  EFITD      09/12  /2014     1160607001   280ms            ","  EFITD      09/12  /2014     1160607001   300ms            ","  EFITD      09/12  /2014     1160607001   320ms            ","  EFITD      09/12  /2014     1160607001   340ms            ","  EFITD      09/12  /2014     1160607001   360ms            ","  EFITD      09/12  /2014     1160607001   380ms            ","  EFITD      09/12  /2014     1160607001   400ms            ","  EFITD      09/12  /2014     1160607001   420ms            ","  EFITD      09/12  /2014     1160607001   440ms            ","  EFITD      09/12  /2014     1160607001   460ms            ","  EFITD      09/12  /2014     1160607001   480ms            ","  EFITD      09/12  /2014     1160607001   500ms            ","  EFITD      09/12  /2014     1160607001   520ms            ","  EFITD      09/12  /2014     1160607001   540ms            ","  EFITD      09/12  /2014     1160607001   560ms            ","  EFITD      09/12  /2014     1160607001   580ms            ","  EFITD      09/12  /2014     1160607001   600ms            ","  EFITD      09/12  /2014     1160607001   620ms            ","  EFITD      09/12  /2014     1160607001   640ms            ","  EFITD      09/12  /2014     1160607001   660ms            ","  EFITD      09/12  /2014     1160607001   680ms            ","  EFITD      09/12  /2014     1160607001   700ms            ","  EFITD      09/12  /2014     1160607001   720ms            ","  EFITD      09/12  /2014     1160607001   740ms            ","  EFITD      09/12  /2014     1160607001   760ms            ","  EFITD      09/12  /2014     1160607001   780ms            ","  EFITD      09/12  /2014     1160607001   800ms            ","  EFITD      09/12  /2014     1160607001   820ms            ","  EFITD      09/12  /2014     1160607001   840ms            ","  EFITD      09/12  /2014     1160607001   860ms            ","  EFITD      09/12  /2014     1160607001   880ms            ","  EFITD      09/12  /2014     1160607001   900ms            ","  EFITD      09/12  /2014     1160607001   920ms            ","  EFITD      09/12  /2014     1160607001   940ms            ","  EFITD      09/12  /2014     1160607001   960ms            ","  EFITD      09/12  /2014     1160607001   980ms            ","  EFITD      09/12  /2014     1160607001  1000ms            ","  EFITD      09/12  /2014     1160607001  1020ms            ","  EFITD      09/12  /2014     1160607001  1040ms            ","  EFITD      09/12  /2014     1160607001  1060ms            ","  EFITD      09/12  /2014     1160607001  1080ms            ","  EFITD      09/12  /2014     1160607001  1100ms            ","  EFITD      09/12  /2014     1160607001  1120ms            ","  EFITD      09/12  /2014     1160607001  1140ms            ","  EFITD      09/12  /2014     1160607001  1160ms            ","  EFITD      09/12  /2014     1160607001  1180ms            ","  EFITD      09/12  /2014     1160607001  1200ms            ","  EFITD      09/12  /2014     1160607001  1220ms            ","  EFITD      09/12  /2014     1160607001  1240ms            ","  EFITD      09/12  /2014     1160607001  1260ms            ","  EFITD      09/12  /2014     1160607001  1280ms            ","  EFITD      09/12  /2014     1160607001  1300ms            ","  EFITD      09/12  /2014     1160607001  1320ms            ","  EFITD      09/12  /2014     1160607001  1340ms            ","  EFITD      09/12  /2014     1160607001  1360ms            ","  EFITD      09/12  /2014     1160607001  1380ms            ","  EFITD      09/12  /2014     1160607001  1400ms            ","  EFITD      09/12  /2014     1160607001  1420ms            ","  EFITD      09/12  /2014     1160607001  1440ms            ","  EFITD      09/12  /2014     1160607001  1460ms            ","  EFITD      09/12  /2014     1160607001  1480ms            ","  EFITD      09/12  /2014     1160607001  1500ms            ","  EFITD      09/12  /2014     1160607001  1520ms            ","  EFITD      09/12  /2014     1160607001  1540ms            ","  EFITD      09/12  /2014     1160607001  1560ms            ","  EFITD      09/12  /2014     1160607001  1580ms            ","  EFITD      09/12  /2014     1160607001  1600ms            ","  EFITD      09/12  /2014     1160607001  1620ms            ","  EFITD      09/12  /2014     1160607001  1640ms            ","  EFITD      09/12  /2014     1160607001  1660ms            ","  EFITD      09/12  /2014     1160607001  1680ms            "], *, Build_Dim(*, .-.A_EQDSK:TIME))')
topNode.addNode("ECURRT","SIGNAL")
topNode.addNode("EPOTEN","SIGNAL")
topNode.addNode("FFPRIM","SIGNAL")
topNode.addNode("FPOL","SIGNAL")
topNode.addNode("FPOLVS","SIGNAL")
topNode.addNode("GTIME","AXIS")
topNode.addNode("HEADER","TEXT")
#No data available in HEADER
topNode.addNode("ISHOT","NUMERIC")
topNode.addNode("ITIME","AXIS")
topNode.addNode("LIM","NUMERIC")
topNode.addNode("LIMITR","NUMERIC")
topNode.addNode("MH","NUMERIC")
topNode.addNode("MW","NUMERIC")
topNode.addNode("NBBBS","SIGNAL")
topNode.addNode("NBDRY","SIGNAL")
topNode.addNode("PCURRT","SIGNAL")
topNode.addNode("PPRIME","SIGNAL")
topNode.addNode("PRES","SIGNAL")
topNode.addNode("PRESSW","SIGNAL")
topNode.addNode("PSIN","AXIS")
topNode.addNode("PSIRZ","SIGNAL")
topNode.addNode("PWPRIM","SIGNAL")
topNode.addNode("QPSI","SIGNAL")
topNode.addNode("R","SIGNAL")
topNode.addNode("RBBBS","SIGNAL")
topNode.addNode("RGRID","NUMERIC")
topNode.addNode("RGRID1","NUMERIC")
topNode.addNode("RHOVN","SIGNAL")
topNode.addNode("RMAXIS","SIGNAL")
topNode.addNode("RRGAM","SIGNAL")
topNode.addNode("RVTOR","SIGNAL")
topNode.addNode("RZERO","NUMERIC")
topNode.addNode("SAIFC","SIGNAL")
topNode.addNode("SAIIP","SIGNAL")
topNode.addNode("SAIMPI","SIGNAL")
topNode.addNode("SAIPR","SIGNAL")
topNode.addNode("SAIPRE","SIGNAL")
topNode.addNode("SAISIL","SIGNAL")
topNode.addNode("SIGGAM","SIGNAL")
topNode.addNode("SSIBRY","SIGNAL")
topNode.addNode("SSIMAG","SIGNAL")
topNode.addNode("TANGAM","SIGNAL")
topNode.addNode("TCURRP","SIGNAL")
topNode.addNode("XDIM","NUMERIC")
topNode.addNode("XLIM","NUMERIC")
topNode.addNode("XPSIALP","SIGNAL")
topNode.addNode("XPSIMIN","SIGNAL")
topNode.addNode("YLIM","NUMERIC")
topNode.addNode("Z","SIGNAL")
topNode.addNode("ZBBBS","SIGNAL")
topNode.addNode("ZDIM","NUMERIC")
topNode.addNode("ZGRID","NUMERIC")
topNode.addNode("ZMAXIS","SIGNAL")
topNode.addNode("ZMID","NUMERIC")
topNode.addNode("ZZGAM","SIGNAL")
topNode.addNode("BASIS","STRUCTURE")
topNode.addNode("CHIOUT","STRUCTURE")
topNode.addNode("MSEOUT","STRUCTURE")
topNode.addNode("OUT1","STRUCTURE")
topNode.addNode("VTOUT","STRUCTURE")
topNode.addNode("BCENTR:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Btor at r0')
topNode.addNode("BRSP:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Current in Fcoils')
topNode.addNode("CPASMA:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' plasma current')
topNode.addNode("DMION:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Ion mass density')
topNode.addNode("ECURRT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Current in Ecoils')
topNode.addNode("EPOTEN:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Electrostatic potential (V)')
topNode.addNode("FFPRIM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' FFprime(psi)')
topNode.addNode("FPOL:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' F(psi)')
topNode.addNode("GTIME:COMMENT","TEXT")
#No data available in GTIME:COMMENT
topNode.addNode("HEADER:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' ')
topNode.addNode("ISHOT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Shot number')
topNode.addNode("ITIME:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' times')
topNode.addNode("LIMITR:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Number of points defining limiter')
topNode.addNode("MH:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Vertical grid dimension')
topNode.addNode("MW:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Radial grid dimension')
topNode.addNode("NBBBS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Number of points defining last closed flux surface')
topNode.addNode("PCURRT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Plasma current density j(r,z,t)')
topNode.addNode("PPRIME:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' pprime(psi)')
topNode.addNode("PRES:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' P(psi)')
topNode.addNode("PRESSW:PRESSW","TEXT")
topNode.putData(Data.compile('$1'),'rotational pressure fit as a function of (?)normalized sqrt(volume)')
topNode.addNode("PSIRZ:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' PSI(R,Z,T)')
topNode.addNode("PWPRIM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'rotational pressure derivative as a function of (?)')
topNode.addNode("QPSI:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' q(psi)')
topNode.addNode("RBBBS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' R coordinates of last closed flux surface')
topNode.addNode("RGRID:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' radial Grid axis')
topNode.addNode("RHOVN:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Normalized sqrt(volume) corresponding to quantities mapped to normalized poloidal flux')
topNode.addNode("RMAXIS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Radius of magnetic axis')
topNode.addNode("RVTOR:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Normalization for toroidal rotation? (meters)')
topNode.addNode("RZERO:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Nominal center')
topNode.addNode("SAIFC:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' CHISQR due to Fcoils')
topNode.addNode("SAIIP:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' CHISQR due to Ip')
topNode.addNode("SAIMPI:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' CHIsqr due to magnetic probes')
topNode.addNode("SAIPR:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' CHIsqr due to pressure')
topNode.addNode("SAIPRE:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Chi-square due to pressure terms')
topNode.addNode("SAISIL:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' CHIsqr due to flux loops')
topNode.addNode("SSIBRY:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Psi at edge (sign?)')
topNode.addNode("SSIMAG:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Psi at magnetic axis (sign?)')
topNode.addNode("XDIM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' radial dimension of grid (m)')
topNode.addNode("XLIM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' R coordinates of limiter')
topNode.addNode("YLIM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Z coordinates of limiter')
topNode.addNode("ZBBBS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Z coordinates of last closed flux surface')
topNode.addNode("ZDIM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' vertical dimension of grid (m)')
topNode.addNode("ZGRID:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' vertical grid axis')
topNode.addNode("ZMAXIS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Height of magnetic axis')
topNode.addNode("ZMID:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Nominal vertical center')
topNode.addNode("BASIS:EE2BDRY","SIGNAL")
topNode.addNode("BASIS:EEBDRY","SIGNAL")
topNode.addNode("BASIS:EEKNT","SIGNAL")
topNode.addNode("BASIS:EETENS","SIGNAL")
topNode.addNode("BASIS:FF2BDRY","SIGNAL")
topNode.addNode("BASIS:FFBDRY","SIGNAL")
topNode.addNode("BASIS:FFKNT","SIGNAL")
topNode.addNode("BASIS:FFTENS","SIGNAL")
topNode.addNode("BASIS:KEE2BDRY","SIGNAL")
topNode.addNode("BASIS:KEEBDRY","SIGNAL")
topNode.addNode("BASIS:KEEFNC","SIGNAL")
topNode.addNode("BASIS:KEEKNT","SIGNAL")
topNode.addNode("BASIS:KFF2BDRY","SIGNAL")
topNode.addNode("BASIS:KFFBDRY","SIGNAL")
topNode.addNode("BASIS:KFFFNC","SIGNAL")
topNode.addNode("BASIS:KFFKNT","SIGNAL")
topNode.addNode("BASIS:KPP2BDRY","SIGNAL")
topNode.addNode("BASIS:KPPBDRY","SIGNAL")
topNode.addNode("BASIS:KPPFNC","SIGNAL")
topNode.addNode("BASIS:KPPKNT","SIGNAL")
topNode.addNode("BASIS:KWW2BDRY","SIGNAL")
topNode.addNode("BASIS:KWWBDRY","SIGNAL")
topNode.addNode("BASIS:KWWFNC","SIGNAL")
topNode.addNode("BASIS:KWWKNT","SIGNAL")
topNode.addNode("BASIS:PP2BDRY","SIGNAL")
topNode.addNode("BASIS:PPBDRY","SIGNAL")
topNode.addNode("BASIS:PPKNT","SIGNAL")
topNode.addNode("BASIS:PPTENS","SIGNAL")
topNode.addNode("BASIS:WW2BDRY","SIGNAL")
topNode.addNode("BASIS:WWBDRY","SIGNAL")
topNode.addNode("BASIS:WWKNT","SIGNAL")
topNode.addNode("BASIS:WWTENS","SIGNAL")
topNode.addNode("CHIOUT:SAIIP","SIGNAL")
topNode.addNode("CHIOUT:SAIMPI","SIGNAL")
topNode.addNode("CHIOUT:SAIPRE","SIGNAL")
topNode.addNode("CHIOUT:SAISIL","SIGNAL")
topNode.addNode("MSEOUT:AA1GAM","SIGNAL")
topNode.addNode("MSEOUT:AA2GAM","SIGNAL")
topNode.addNode("MSEOUT:AA3GAM","SIGNAL")
topNode.addNode("MSEOUT:AA4GAM","SIGNAL")
topNode.addNode("MSEOUT:AA5GAM","SIGNAL")
topNode.addNode("MSEOUT:AA6GAM","SIGNAL")
topNode.addNode("MSEOUT:FWTGAM","SIGNAL")
topNode.addNode("MSEOUT:MSEBKP","SIGNAL")
topNode.addNode("MSEOUT:RRRGAM","SIGNAL")
topNode.addNode("MSEOUT:SGAMMA","SIGNAL")
topNode.addNode("MSEOUT:TGAMMA","SIGNAL")
topNode.addNode("MSEOUT:ZZZGAM","SIGNAL")
topNode.addNode("OUT1:BETAP0","SIGNAL")
topNode.addNode("OUT1:BRSP","SIGNAL")
topNode.addNode("OUT1:BTOR","SIGNAL")
topNode.addNode("OUT1:COILS","SIGNAL")
topNode.addNode("OUT1:EMP","SIGNAL")
topNode.addNode("OUT1:ENP","SIGNAL")
topNode.addNode("OUT1:ERROR","SIGNAL")
topNode.addNode("OUT1:EXPMP2","SIGNAL")
topNode.addNode("OUT1:FWTCUR","SIGNAL")
topNode.addNode("OUT1:FWTSI","SIGNAL")
topNode.addNode("OUT1:IBUNMN","SIGNAL")
topNode.addNode("OUT1:ICONVR","SIGNAL")
topNode.addNode("OUT1:ICURRT","SIGNAL")
topNode.addNode("OUT1:ISHOT","SIGNAL")
topNode.addNode("OUT1:ITIME","SIGNAL")
topNode.addNode("OUT1:LIMITR","SIGNAL")
topNode.addNode("OUT1:MXITER","SIGNAL")
topNode.addNode("OUT1:NBDRY","SIGNAL")
topNode.addNode("OUT1:NPRESS","SIGNAL")
topNode.addNode("OUT1:NQPSI","SIGNAL")
topNode.addNode("OUT1:NXITER","SIGNAL")
topNode.addNode("OUT1:PLASMA","SIGNAL")
topNode.addNode("OUT1:PRES","SIGNAL")
topNode.addNode("OUT1:PRESSR","SIGNAL")
topNode.addNode("OUT1:PRESSW","SIGNAL")
topNode.addNode("OUT1:QENP","SIGNAL")
topNode.addNode("OUT1:QPSI","SIGNAL")
topNode.addNode("OUT1:RBDRY","SIGNAL")
topNode.addNode("OUT1:RCENTR","SIGNAL")
topNode.addNode("OUT1:RPRESS","SIGNAL")
topNode.addNode("OUT1:RZERO","SIGNAL")
topNode.addNode("OUT1:SIGPRE","SIGNAL")
topNode.addNode("OUT1:XLIM","SIGNAL")
topNode.addNode("OUT1:YLIM","SIGNAL")
topNode.addNode("OUT1:ZBDRY","SIGNAL")
topNode.addNode("VTOUT:NPRESW","SIGNAL")
topNode.addNode("VTOUT:PRESW","SIGNAL")
topNode.addNode("VTOUT:RPRESW","SIGNAL")
topNode.addNode("VTOUT:SIGPRW","SIGNAL")
#####DONE WITH G_EQDSK - MOVING TO A_EQDSK#####
topNode.addNode("AAACOMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Nodes correspond to the data items written in the EFIT Assssssss.ttttt type EQDSK, as written by the SHIPIT subroutine. Most of these are time-dependent and are stored as signals. The time base is TIME. ')
topNode.addNode("AAQ1","SIGNAL")
topNode.addNode("AAQ2","SIGNAL")
topNode.addNode("AAQ3","SIGNAL")
topNode.addNode("ALI","SIGNAL")
topNode.addNode("ALPHA","SIGNAL")
topNode.addNode("AMINOR","SIGNAL")
topNode.addNode("AOUT","SIGNAL")
topNode.addNode("AREA","SIGNAL")
topNode.addNode("AREAO","SIGNAL")
topNode.addNode("ATIME","AXIS")
topNode.addNode("BCENTR","SIGNAL")
topNode.addNode("BETAN","SIGNAL")
topNode.addNode("BETAP","SIGNAL")
topNode.addNode("BETAPD","SIGNAL")
topNode.addNode("BETAT","SIGNAL")
topNode.addNode("BETATD","SIGNAL")
topNode.addNode("BPOLAV","SIGNAL")
topNode.addNode("BT0","SIGNAL")
topNode.addNode("BT0VAC","SIGNAL")
topNode.addNode("BTAXP","SIGNAL")
topNode.addNode("BTAXV","SIGNAL")
topNode.addNode("CCBRSP","SIGNAL")
topNode.addNode("CDFLUX","SIGNAL")
topNode.addNode("CHIGAMT","SIGNAL")
topNode.addNode("CHIMSE","SIGNAL")
topNode.addNode("CHIPRE","SIGNAL")
topNode.addNode("CHISQ","SIGNAL")
topNode.addNode("CJ1AVE","SIGNAL")
topNode.addNode("CJOR0","SIGNAL")
topNode.addNode("CJOR95","SIGNAL")
topNode.addNode("CJOR99","SIGNAL")
topNode.addNode("CMPR2","SIGNAL")
topNode.addNode("CONDNO","SIGNAL")
topNode.addNode("CPASMA","SIGNAL")
topNode.addNode("CPROF","NUMERIC")
topNode.addNode("CSILOP","SIGNAL")
topNode.addNode("DCO2R","SIGNAL")
topNode.addNode("DCO2V","SIGNAL")
topNode.addNode("DENSITY","SIGNAL")
topNode.addNode("DIAMAG","SIGNAL")
topNode.addNode("DIAMGC","SIGNAL")
topNode.addNode("DILLDOM","SIGNAL")
topNode.addNode("DILLDOMM","SIGNAL")
topNode.addNode("DILUDOM","SIGNAL")
topNode.addNode("DILUDOMM","SIGNAL")
topNode.addNode("DMINLX","SIGNAL")
topNode.addNode("DMINUX","SIGNAL")
topNode.addNode("DOLLBAF","SIGNAL")
topNode.addNode("DOLLBAFM","SIGNAL")
topNode.addNode("DOLUBAF","SIGNAL")
topNode.addNode("DOLUBAFM","SIGNAL")
topNode.addNode("DOUTL","SIGNAL")
topNode.addNode("DOUTU","SIGNAL")
topNode.addNode("DRSEP","SIGNAL")
topNode.addNode("ECCURT","SIGNAL")
topNode.addNode("ELONGM","SIGNAL")
topNode.addNode("EOUT","SIGNAL")
topNode.addNode("ERROR","SIGNAL")
topNode.addNode("FEXPAN","SIGNAL")
topNode.addNode("FEXPVS","SIGNAL")
topNode.addNode("FIT_TYPE","TEXT")
topNode.putData(Data.compile('$1'),'MAG')
topNode.addNode("GAPBOT","SIGNAL")
topNode.addNode("GAPIN","SIGNAL")
topNode.addNode("GAPOUT","SIGNAL")
topNode.addNode("GAPTOP","SIGNAL")
topNode.addNode("HEADER","SIGNAL")
topNode.addNode("IN","SIGNAL")
topNode.addNode("INDENT","SIGNAL")
topNode.addNode("IPMEAS","SIGNAL")
topNode.addNode("IPMHD","SIGNAL")
topNode.addNode("ISHOT","NUMERIC")
topNode.addNode("J0N","SIGNAL")
topNode.addNode("J1N","SIGNAL")
topNode.addNode("J95N","SIGNAL")
topNode.addNode("J99N","SIGNAL")
topNode.addNode("JFLAG","SIGNAL")
topNode.addNode("KAPPA","SIGNAL")
topNode.addNode("KAPPA0","SIGNAL")
topNode.addNode("LFLAG","SIGNAL")
topNode.addNode("LI","SIGNAL")
topNode.addNode("LIMLOC","SIGNAL")
topNode.addNode("MCO2R","NUMERIC")
topNode.addNode("MCO2V","NUMERIC")
topNode.addNode("MFVERS","TEXT")
topNode.putData(Data.compile('$1'),'09/12/2014')
topNode.addNode("NINDX","SIGNAL")
topNode.addNode("NLNEW","NUMERIC")
topNode.addNode("NLOLD","NUMERIC")
topNode.addNode("OBOTS","SIGNAL")
topNode.addNode("OBOTT","SIGNAL")
topNode.addNode("OLEFS","SIGNAL")
topNode.addNode("OLEFT","SIGNAL")
topNode.addNode("ORIGHS","SIGNAL")
topNode.addNode("ORIGHT","SIGNAL")
topNode.addNode("ORING","SIGNAL")
topNode.addNode("OTOP","SIGNAL")
topNode.addNode("OTOPS","SIGNAL")
topNode.addNode("PASMAT","SIGNAL")
topNode.addNode("PBINJ","SIGNAL")
topNode.addNode("PEAK","SIGNAL")
topNode.addNode("POH","SIGNAL")
topNode.addNode("PP95","SIGNAL")
topNode.addNode("PSI0","SIGNAL")
topNode.addNode("PSIBDY","SIGNAL")
topNode.addNode("PSIREF","SIGNAL")
topNode.addNode("PSURFA","SIGNAL")
topNode.addNode("Q0","SIGNAL")
topNode.addNode("Q95","SIGNAL")
topNode.addNode("QL","SIGNAL")
topNode.addNode("QMERCI","SIGNAL")
topNode.addNode("QMFLAG","TEXT")
topNode.putData(Data.compile('$1'),'FIX')
topNode.addNode("QMIN","SIGNAL")
topNode.addNode("QOUT","SIGNAL")
topNode.addNode("QPSIB","SIGNAL")
topNode.addNode("QQMAGX","SIGNAL")
topNode.addNode("QQMIN","SIGNAL")
topNode.addNode("QSTA","SIGNAL")
topNode.addNode("QSTAR","SIGNAL")
topNode.addNode("R0","SIGNAL")
topNode.addNode("RATSOL","SIGNAL")
topNode.addNode("RBCENT","SIGNAL")
topNode.addNode("RCENCM","NUMERIC")
topNode.addNode("RCO2R","SIGNAL")
topNode.addNode("RCO2V","SIGNAL")
topNode.addNode("RCUR","SIGNAL")
topNode.addNode("RCURRT","SIGNAL")
topNode.addNode("RHOQMIN","SIGNAL")
topNode.addNode("RMAGX","SIGNAL")
topNode.addNode("RMIDIN","SIGNAL")
topNode.addNode("RMIDOUT","SIGNAL")
topNode.addNode("ROUT","SIGNAL")
topNode.addNode("RQ1","SIGNAL")
topNode.addNode("RQ2","SIGNAL")
topNode.addNode("RQ3","SIGNAL")
topNode.addNode("RQQMIN","SIGNAL")
topNode.addNode("RSEPS","SIGNAL")
topNode.addNode("RSURF","SIGNAL")
topNode.addNode("RTTT","SIGNAL")
topNode.addNode("RVSID","SIGNAL")
topNode.addNode("RVSIN","SIGNAL")
topNode.addNode("RVSIU","SIGNAL")
topNode.addNode("RVSOD","SIGNAL")
topNode.addNode("RVSOU","SIGNAL")
topNode.addNode("RVSOUT","SIGNAL")
topNode.addNode("RXPT1","SIGNAL")
topNode.addNode("RXPT2","SIGNAL")
topNode.addNode("S1","SIGNAL")
topNode.addNode("S2","SIGNAL")
topNode.addNode("S3","SIGNAL")
topNode.addNode("SEPBOT","SIGNAL")
topNode.addNode("SEPEXP","SIGNAL")
topNode.addNode("SEPIN","SIGNAL")
topNode.addNode("SEPLIM","SIGNAL")
topNode.addNode("SEPNOSE","SIGNAL")
topNode.addNode("SEPOUT","SIGNAL")
topNode.addNode("SEPTOP","SIGNAL")
topNode.addNode("SHEAR","SIGNAL")
topNode.addNode("SHEARB","SIGNAL")
topNode.addNode("SIBDRY","SIGNAL")
topNode.addNode("SIMAGX","SIGNAL")
topNode.addNode("SLANTL","SIGNAL")
topNode.addNode("SLANTU","SIGNAL")
topNode.addNode("SSEP","SIGNAL")
topNode.addNode("SSI01","SIGNAL")
topNode.addNode("SSI95","SIGNAL")
topNode.addNode("TAUDIA","SIGNAL")
topNode.addNode("TAUMHD","SIGNAL")
topNode.addNode("TAVEM","NUMERIC")
topNode.addNode("TERROR","SIGNAL")
topNode.addNode("TIME","AXIS")
topNode.addNode("TRIBOT","SIGNAL")
topNode.addNode("TRITOP","SIGNAL")
topNode.addNode("TSAISQ","SIGNAL")
topNode.addNode("UDAY","TEXT")
topNode.putData(Data.compile('$1'),' 7-Jun-16 ')
topNode.addNode("VERTN","SIGNAL")
topNode.addNode("VLOOPMHD","SIGNAL")
topNode.addNode("VLOOPT","SIGNAL")
topNode.addNode("VOLUME","SIGNAL")
topNode.addNode("VOUT","SIGNAL")
topNode.addNode("VSURF","SIGNAL")
topNode.addNode("VSURFA","SIGNAL")
topNode.addNode("WBDOT","SIGNAL")
topNode.addNode("WDIA","SIGNAL")
topNode.addNode("WMHD","SIGNAL")
topNode.addNode("WPDOT","SIGNAL")
topNode.addNode("WPLASM","SIGNAL")
topNode.addNode("WPLASMD","SIGNAL")
topNode.addNode("XNDNT","SIGNAL")
topNode.addNode("XNNC","SIGNAL")
topNode.addNode("YYY2","SIGNAL")
topNode.addNode("Z0","SIGNAL")
topNode.addNode("ZCUR","SIGNAL")
topNode.addNode("ZCURRT","SIGNAL")
topNode.addNode("ZMAGX","SIGNAL")
topNode.addNode("ZOUT","SIGNAL")
topNode.addNode("ZSEPS","SIGNAL")
topNode.addNode("ZSURF","SIGNAL")
topNode.addNode("ZUPERTS","SIGNAL")
topNode.addNode("ZVSID","SIGNAL")
topNode.addNode("ZVSIN","SIGNAL")
topNode.addNode("ZVSIU","SIGNAL")
topNode.addNode("ZVSOD","SIGNAL")
topNode.addNode("ZVSOU","SIGNAL")
topNode.addNode("ZVSOUT","SIGNAL")
topNode.addNode("ZXPT1","SIGNAL")
topNode.addNode("ZXPT2","SIGNAL")
topNode.addNode("AAQ1:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Radius of q=1 surface')
topNode.addNode("AAQ2:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Radius of q=2 surface')
topNode.addNode("AAQ3:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Radius of q=3 surface')
topNode.addNode("ALI:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' li (GA defineition)')
topNode.addNode("ALPHA:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' ? Sum of the squares of Bz/Bp')
topNode.addNode("AOUT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Minor radius of last closed  flux surface')
topNode.addNode("AREAO:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Area of last closed flux surface (cm^2)')
topNode.addNode("ATIME:COMMENT","TEXT")
#No data available in ATIME:COMMENT
topNode.addNode("BCENTR:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Signal containing the valur of Btor at rcentr')
topNode.addNode("BETAP:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Poloidal beta ')
topNode.addNode("BETAPD:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Diamagnetic betap')
topNode.addNode("BETAT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Toroidal beta in %')
topNode.addNode("BETATD:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Diamagnetic beta')
topNode.addNode("BPOLAV:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Average poloidal field')
topNode.addNode("BTAXP:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Btor on axis = F(0.)/rmaxis')
topNode.addNode("BTAXV:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Vacuum Btor on axis = F(1.)/rmaxis')
topNode.addNode("CCBRSP:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Calculated Fcoil currents')
topNode.addNode("CDFLUX:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Computed diamagnetic flux')
topNode.addNode("CHIPRE:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Chisq due to kinetic pressure data ')
topNode.addNode("CJOR0:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' flux surface average current density normalized to I/A at magnetic axis')
topNode.addNode("CJOR95:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Normalized current density at 95% flux surface')
topNode.addNode("CMPR2:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Calculated Bpol coil signals')
topNode.addNode("CONDNO:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Condition number returned by the Least Square fitting routine')
topNode.addNode("CPASMA:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Calculated plasma current')
topNode.addNode("CPROF:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Real cast of integer profile flag ICPROF. Included for consistency with GEQDSK file contents.  specific choice of current profile ICPROF=1  no edge current density allowed ICPROF=2  free edge current density ICPROF=3  weak edge current density constraint.')
topNode.addNode("CSILOP:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Calculated psi loop signals')
topNode.addNode("DCO2R:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Line averaged density along each radial CO2 chord')
topNode.addNode("DCO2V:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Line averaged density along each CO2 chord')
topNode.addNode("DIAMAG:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Diamagnetic flux ')
topNode.addNode("DILLDOM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Distance from Inner Leg to Lower Dome  (which on C-Mod refers to the inner divertor nose)')
topNode.addNode("DILLDOMM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Distance at the inner miplane between the LCFS and the surface intersecting the Lower Dome (which on C-Mod refers to the inner divertor nose)')
topNode.addNode("DILUDOM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Distance from Inner Leg to Upper Dome  (which on C-Mod refers to the shelf under the  EF1U pocket)')
topNode.addNode("DILUDOMM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Distance at the inner midplane between the LCFS and the flux surface intersecting the Upper Dome (which on C-Mod refers to the shelf under the  EF1U pocket). Only defined when the Dome point is in the common flux region. ')
topNode.addNode("DMINLX:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Distance between the limiter and the lower x-point')
topNode.addNode("DMINUX:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Distance between the limiter and the upper x-point')
topNode.addNode("DOLLBAF:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Distance from Outer Leg to Lower Baffle  (which on C-Mod refers to the inlet under the   outer divertor plate)')
topNode.addNode("DOLLBAFM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Distance at the outer midplane between the LCFS and the flux surface intersecting the Lower Baffle (which on C-Mod refers to the inlet below the   outer divertor plate). Note that this is only defined when the baffle point is in the common flux region, i.e. for slot divertors')
topNode.addNode("DOLUBAF:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Distance from Outer Leg to Upper Baffle (which on C-Mod refers to the upper gusset corner)')
topNode.addNode("DOLUBAFM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Distance at the outer midplane from the LCFS to the flux surface intersecting the Upper Baffle (which on C-Mod refers to the upper gusset corner) Note that this is only defined when the baffle point is in the common flux region. ')
topNode.addNode("DOUTL:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Lower triangularity of last closed flux surface')
topNode.addNode("DOUTU:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Upper triangularity of last closed flux surface')
topNode.addNode("ECCURT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Calculated Ecoil currents')
topNode.addNode("ELONGM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Elongation at the axis')
topNode.addNode("EOUT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Elongation of last closed  flux surface')
topNode.addNode("HEADER:CODE_DATE","TEXT")
topNode.putData(Data.compile('$1'),'Fri Sep 12 13:38:14 2014')
topNode.addNode("HEADER:CODE_PATH","TEXT")
topNode.putData(Data.compile('$1'),'/usr/local/cmod/codes/efit/bin/efitdd')
topNode.addNode("ISHOT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Shot number - better be the same as $shot')
topNode.addNode("JFLAG:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' ?? something to do with the error checking')
topNode.addNode("LFLAG:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' ntimes x 30 containing the error flags returned by CHKERR ')
topNode.addNode("LIMLOC:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'String giving location of limiter or x-point bounding plasma ')
topNode.addNode("MCO2R:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Number of radial CO2 chords')
topNode.addNode("MCO2V:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Number of vertical CO2 chords')
topNode.addNode("MFVERS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' EFIT Version number')
topNode.addNode("NLNEW:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'EQDSK control parameter. Used in conjunction with NLOLD to determine if the current code version contains extra output lines. MDS nodes to be used by WRITE_EQDSK procedures.')
topNode.addNode("NLOLD:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'EQDSK control parameter. Used in conjunction with NLNEW to determine if the current code version contains extra output lines. MDS nodes to be used by WRITE_EQDSK procedures.')
topNode.addNode("OBOTS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Bottom gap to second separatrix?')
topNode.addNode("OBOTT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' bottom gap (cm)')
topNode.addNode("OLEFS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Inner gap to second separatrix? ')
topNode.addNode("OLEFT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'inside gap (cm) ')
topNode.addNode("ORIGHS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Outer gap to second separatrix')
topNode.addNode("ORIGHT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' outside gap (cm)')
topNode.addNode("ORING:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Gap to inner ring coil')
topNode.addNode("OTOP:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' top gap (cm) ')
topNode.addNode("OTOPS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Top gap to second separatrix ')
topNode.addNode("PASMAT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Plasma current')
topNode.addNode("PBINJ:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Injected power')
topNode.addNode("PEAK:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Peak to average plasma pressure ')
topNode.addNode("PP95:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' pprime at 95% flux surface')
topNode.addNode("PSIREF:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Reference flux (ie psi on flux loop #0)')
topNode.addNode("PSURFA:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'plasma boundary surface area in m2 ')
topNode.addNode("QMERCI:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' ')
topNode.addNode("QMFLAG:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Flag indicating whether q0 was fixed of fit to')
topNode.addNode("QOUT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' qpsi at the last closed flux surface. Pretty meaningless for separatrix case.')
topNode.addNode("QPSIB:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' q_psi at the 95% flux surface.')
topNode.addNode("QQMAGX:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' q on axis')
topNode.addNode("QQMIN:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'minimum safety factor qmin ')
topNode.addNode("QSTA:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' QSTAR: GA definition qsta = 5*Rcentr*Bcentr/Ip/(rout/aout)^2 *(1+eout^2)/2. *fk * (1.+ aout^2*lamda/rout^2) where fk = 1.24-0.54*eout+0.3*(eout^2+douta^2)+0.13*douta and lamda is the Shafranov lamda=betap+li/2')
topNode.addNode("RATSOL:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Ratio of the flux expansion at the inner midplane relative to the outer midplane, based on a 1cm SOL at the outboard side')
topNode.addNode("RCENCM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Nominal center (cm); used for definition of F=RB at in vacuum')
topNode.addNode("RCO2R:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Chord length of each horizontal CO2 chord')
topNode.addNode("RCO2V:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Chord length of each vertical CO2 chord')
topNode.addNode("RCURRT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Current-averaaged major radius?')
topNode.addNode("RMAGX:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Major radius at magnetic axis')
topNode.addNode("RMIDIN:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'inner major radius in m at Z=0.0 ')
topNode.addNode("RMIDOUT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'outer major radius in m at Z=0.0 ')
topNode.addNode("ROUT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Major radius (by geometric construction) of last closed flux surface')
topNode.addNode("RQQMIN:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'normalized radius of qmin , square root of normalized volume ')
topNode.addNode("RSEPS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Radial location of upper and lower xpoints in order of closeness to boundary ')
topNode.addNode("RTTT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Funny average radius seems to be Integral EdV/ Integral Eda, where E is total energy')
topNode.addNode("RVSID:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Major radius of the lower inner strikepoint (Radius VeSsel Inside Down)')
topNode.addNode("RVSIN:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Major radius of inner strike point')
topNode.addNode("RVSIU:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Major radius of the Inner Upper strikepoint')
topNode.addNode("RVSOD:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Major Radius of the lower outer strikepoint (Radius VeSsel Outer Down)')
topNode.addNode("RVSOU:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Major Radius of the Outer Upper strikepoint')
topNode.addNode("RVSOUT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Major radius of outer strike point')
topNode.addNode("S1:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Shafranov integral S1')
topNode.addNode("S2:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Shafranov integral S2')
topNode.addNode("S3:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Shafranov integral S3')
topNode.addNode("SEPEXP:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Minimum gap between separatrices?')
topNode.addNode("SEPLIM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Minimum gap to limiter')
topNode.addNode("SHEARB:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Shear parameter at the boundary')
topNode.addNode("SIBDRY:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Psi at the boundary')
topNode.addNode("SIMAGX:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Psi at magnetic axis')
topNode.addNode("SLANTL:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' ')
topNode.addNode("SLANTU:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' ')
topNode.addNode("SSEP:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' gap ?')
topNode.addNode("TAUDIA:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Confinemetn time based on Wplasmd')
topNode.addNode("TAUMHD:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Confinement time based on Wmhd')
topNode.addNode("TAVEM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Time for averaging magnetics data (ms) ')
topNode.addNode("TERROR:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Convergence parmeter: Normalized change in flux at last iteration.')
topNode.addNode("TIME:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Axis containing dimension for signals')
topNode.addNode("TSAISQ:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' CHIsqr for each equilibrium solution as a function of time')
topNode.addNode("UDAY:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Date and Time EFIT was run')
topNode.addNode("VERTN:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Decay index at current centroid')
topNode.addNode("VLOOPT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Loop voltage')
topNode.addNode("VOUT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Volume of last closed flux surface')
topNode.addNode("VSURFA:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Surface voltage')
topNode.addNode("WBDOT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Time derivative of magnetic energy')
topNode.addNode("WPDOT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Time derivative of plasma energy')
topNode.addNode("WPLASM:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Plasma stored energy (J)')
topNode.addNode("WPLASMD:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Plasma stored energy based on diamagnetic')
topNode.addNode("XNDNT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Indentation')
topNode.addNode("XNNC:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Critical index? ')
topNode.addNode("YYY2:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Current moment y2')
topNode.addNode("ZCURRT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Current-averaged z-coordinate')
topNode.addNode("ZMAGX:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Height of magnetic axis')
topNode.addNode("ZOUT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Z coordinate of last closed  flux surface')
topNode.addNode("ZSEPS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Vertical location of upper and lower xpoints in order of closeness to boundary')
topNode.addNode("ZUPERTS:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Top point of thomson scattering path?')
topNode.addNode("ZVSID:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Height of the Inner Lower (Down) strikepoint')
topNode.addNode("ZVSIN:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Height of inner strike point')
topNode.addNode("ZVSIU:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Height of the Upper Inside strikepoint')
topNode.addNode("ZVSOD:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Height of the Outer Lower (Down) strikepoint')
topNode.addNode("ZVSOU:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),'Height of the Outer Upper strikepoint')
topNode.addNode("ZVSOUT:COMMENT","TEXT")
topNode.putData(Data.compile('$1'),' Height of outer strike point')
#####DONE WITH A_EQDSK#####
